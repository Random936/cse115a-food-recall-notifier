* CSE115A - Food Recall Notifier

* Vision Statement

Food Recall Notifier will be created to notify users of any recalled food quickly and through their phone based on the [[https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts][FDA website]]. In order to more quickly alert the user of recall with minimal time impact, a mobile application will be used allowing for bar code scanning.

* Components

** Android/IOS Mobile Application

** Backend API 

** Backend Database

** FDA Web Scraper

* Required Features

** TODO UPC Number Lookup

** TODO Barcode Scanner

** TODO Real Time Search

** TODO Display of Recalled Item

This display should include:
+ The UPC Number
+ Image of the recalled item
+ Date of recall
+ Reason for Announcement
+ Brand Name
+ Item Being Recalled

* Interfaces

* API Routes

** Client

No authentication should be required for any of the client API routes.

*** ~/search/<UPC>~

This route will search for any matching UPC number given a specific UPC or a partial UPC. It will return a list of UPC records with a brief set of data.

**** Example Success Response
**** Example Failed Response

*** ~/query/<UPC>~

This route will query a single UPC and return the first matching record found with a full set of the scraped data.

**** Example Success Response
**** Example Failed Response

*** ~/image/<UPC>~

This route will query a single UPC and return the first matching record found with a full set of the scraped data.

**** Example Success Response
**** Example Failed Response

** Web Scrapers

Authentication is required for all web scraper API routes.

*** ~/jobs/query~

*** ~/jobs/finish~

*** ~/jobs/pending~

Not necessarily a required route, though could be helpful for determining back logged tasks.

* Dependencies

+ SQL/MongoDB - Need to decide here...
+ Flask - Backend API
+ BeautifulSoup - Web Scrapers

* Security Considerations

** API Keys

In our current plan, the client will never write to the database and will only ever read based on a UPC number. To prevent a malicious request from writing to the database using the same API calls used by the web scraper, we will need to employ API keys.
